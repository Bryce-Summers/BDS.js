// Generated by CoffeeScript 1.11.1
(function() {
  BDS.RayQuery = (function() {
    function RayQuery(ray) {
      this.initialize(ray);
    }

    RayQuery.prototype.initialize = function(ray) {
      this.ray = ray;
      this.isects = [];
      this.min_time = Number.MAX_VALUE;
      return this.time = void 0;
    };

    RayQuery.prototype.updateMinTime = function(new_time) {
      if (new_time < this.min_time) {
        return this.min_time = new_time;
      }
    };

    RayQuery.prototype.hasIntersection = function() {
      return this.isects.length > 0 || this.min_time < Number.MAX_VALUE;
    };


    /*
    TODO: Add isect adding and updating functions.
     */


    /*
     * Pops the latest isect_obj to be found.
    popNewest: () ->
        return @isects.pop()
    
     * Pops the oldest isect_obj that was found.
    popOldest: () ->
        output = @isects[0]
        @isects.slice(1)
        return output
     */

    RayQuery.prototype.sortByTime = function() {
      debugger;
      return console.log("Rayquery: Implement Me Please!");
    };

    return RayQuery;

  })();

}).call(this);
