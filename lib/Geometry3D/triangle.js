// Generated by CoffeeScript 1.11.1

/*

BDS.Triangle class.

Written by Bryce Summers on July.23.2017.

Purpose: This class represents a single triangle in 3D space
         along with associated metrics and data.

Geometric Specification:
    3 points: .a, .b, and .c:  BDS.Point

Derived Geometric Values:
    Normal direction: .normal: BDS.Point (direction vector)
    center_point: .center:   BDS.Point (Center point defined for this triangle)
    axis aligned bounding box: .aabb

Topology:
    faceLink: BDS.FaceLinkData, We bidirectionally link to the faceLinkData objects, so as to keep the faceLink objects pure connectivity objects.
 */

(function() {
  BDS.Triangle = (function() {
    function Triangle(a, b, c) {
      this.a = a.clone();
      this.b = b.clone();
      this.c = c.clone();
    }

    Triangle.prototype.computeCentroid = function() {
      return this.a.clone.add(this.b).add(this.c).divideScalar(3);
    };

    Triangle.prototype.ensureBoundingBox = function() {
      if (this.aabb === null) {
        this.generateBoundingBox();
      }
      return this._aabb;
    };

    Triangle.prototype.generateBoundingBox = function() {
      this._aabb = new BDS.Box();
      this._aabb.expandByPoint(this.a);
      this._aabb.expandByPoint(this.b);
      this._aabb.expandByPoint(this.c);
      return this._aabb;
    };

    Triangle.prototype.getBoundingBox = function() {
      return this._aabb;
    };

    Triangle.prototype.rayQueryMin = function(rayQuery) {};

    Triangle.prototype.rayQueryAll = function(rayQuery) {};

    Triangle.prototype.rayQueryTime = function(rayQuery) {};

    Triangle.prototype.rayQueryTimes = function(rayQuery) {};

    return Triangle;

  })();

}).call(this);
